# syntax=docker/dockerfile:1

from nvidia/cuda:11.8.0-devel-ubuntu20.04

run echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

#run apt-get install -y -q

run apt update

run apt install -y libhdf5-dev
run apt install -y libnetcdf-dev
run apt install -y libnetcdf-c++4-dev

run apt install ninja-build
run apt install -y vim
run apt install -y libconfig-dev
run apt install -y libconfig++-dev

# the only thing left to install is CLI11 and CMake
run DEBIAN_FRONTEND=noninteractive apt install -y gpg wget

# do all the package adding keys etc
run wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null

run echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null

run apt update

run rm /usr/share/keyrings/kitware-archive-keyring.gpg

run apt install kitware-archive-keyring

run DEBIAN_FRONTEND=noninteractive apt install -y cmake

# acquire python and venv
run apt install -y python3-venv

# copy over the requirements file and 
copy containers/requirements.txt .

# next you need to pip install: matplotlib, numpy, netCDF4, something else

run python3 -m venv /venv

ENV PATH="/venv/bin:$PATH"

run python3 -m  pip install -r requirements.txt

# as a final step volume map the host directory
volume /host

run apt install -y git
workdir /
run mkdir GITR
copy . GITR
run mkdir build
run cmake -S GITR -B build -G Ninja

run cmake --build build -- -j 0

workdir /host

entrypoint [ "/build/GITR" ]
